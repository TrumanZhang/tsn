version 2
run General-0-20190118-15:17:59-17109
attr configname General
attr datetime 20190118-15:17:59
attr experiment General
attr inifile example_frame_preemption.ini
attr iterationvars ""
attr iterationvarsf ""
attr measurement ""
attr network TestScenario
attr processid 17109
attr repetition 0
attr replication #0
attr resultdir results_frame_preemption
attr runnumber 0
attr seedset 0
param **.displayAddresses true
param **.verbose true
param **.promiscuous true
param **.registerProtocol true
param **.*.clock.clockRate "\"1us\""
param **.robotController.eth.mac.address "\"00-00-00-00-00-01\""
param **.workstation1.eth.mac.address "\"00-00-00-00-00-02\""
param **.workstation2.eth.mac.address "\"00-00-00-00-00-03\""
param **.roboticArm.eth.mac.address "\"00-00-00-00-00-04\""
param **.backupServer.eth.mac.address "\"00-00-00-00-00-05\""
param **.switch*.processingDelay[*].delay 5us
param **.filteringDatabase.database "xmldoc(\"xml/TestScenarioRouting1.xml\", \"/filteringDatabases/\")"
param **.filteringDatabase.cycle "xmldoc(\"xml/TestScenarioSchedule1.xml\", \"/schedule/\")"
param **.gateController.initialSchedule "xmldoc(\"xml/TestScenarioSchedule_AllOpen.xml\")"
param **.gateController.enableHoldAndRelease false
param **.switch*.queuing[*].tsAlgorithms[0].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[1].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[2].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[3].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[4].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[5].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[6].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[7].typename "\"StrictPriority\""
param **.queues[0].expressQueue false
param **.queues[1].expressQueue false
param **.queues[2].expressQueue false
param **.queues[3].expressQueue false
param **.queues[4].expressQueue false
param **.queues[5].expressQueue false
param **.queues[6].expressQueue false
param **.queues[7].expressQueue true
param **.queues[*].bufferCapacity 363360b
param **.switchA.eth[3].mac.enablePreemptingFrames true
param **.robotController.trafGenSchedApp.initialSchedule "xmldoc(\"xml/TestScenarioSchedule_AllOpen.xml\")"
param **.workstation*.trafGenQueueApp.destAddress "\"00-00-00-00-00-05\""
param **.workstation*.trafGenQueueApp.packetLength "1500Byte - 4Byte"
param **.workstation*.trafGenQueueApp.vlanTagEnabled true
param **.workstation1.trafGenQueueApp.pcp 6
param **.workstation2.trafGenQueueApp.pcp 5
param **.roboticArm.trafGenApp.numPacketsPerBurst 0
param **.roboticArm.trafGenApp.sendInterval 1ms
param **.roboticArm.trafGenApp.packetLength 100B
param **.backupServer.trafGenApp.numPacketsPerBurst 0
param **.backupServer.trafGenApp.sendInterval 1ms
param **.backupServer.trafGenApp.packetLength 100B

vector 0 TestScenario.switchA.eth[0].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 1 TestScenario.switchA.eth[0].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 2 TestScenario.switchA.eth[0].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 3 TestScenario.switchA.eth[0].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 4 TestScenario.switchA.eth[0].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 5 TestScenario.switchA.eth[0].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 6 TestScenario.switchA.eth[0].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 7 TestScenario.switchA.eth[0].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 8 TestScenario.switchA.eth[1].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 9 TestScenario.switchA.eth[1].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 10 TestScenario.switchA.eth[1].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 11 TestScenario.switchA.eth[1].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 12 TestScenario.switchA.eth[1].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 13 TestScenario.switchA.eth[1].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 14 TestScenario.switchA.eth[1].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 15 TestScenario.switchA.eth[1].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 16 TestScenario.switchA.eth[2].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 17 TestScenario.switchA.eth[2].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 18 TestScenario.switchA.eth[2].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 19 TestScenario.switchA.eth[2].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 20 TestScenario.switchA.eth[2].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 21 TestScenario.switchA.eth[2].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 22 TestScenario.switchA.eth[2].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 23 TestScenario.switchA.eth[2].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 24 TestScenario.switchA.eth[3].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 25 TestScenario.switchA.eth[3].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 26 TestScenario.switchA.eth[3].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 27 TestScenario.switchA.eth[3].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 28 TestScenario.switchA.eth[3].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 29 TestScenario.switchA.eth[3].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 30 TestScenario.switchA.eth[3].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 31 TestScenario.switchA.eth[3].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 32 TestScenario.switchB.eth[0].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 33 TestScenario.switchB.eth[0].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 34 TestScenario.switchB.eth[0].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 35 TestScenario.switchB.eth[0].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 36 TestScenario.switchB.eth[0].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 37 TestScenario.switchB.eth[0].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 38 TestScenario.switchB.eth[0].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 39 TestScenario.switchB.eth[0].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 40 TestScenario.switchB.eth[1].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 41 TestScenario.switchB.eth[1].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 42 TestScenario.switchB.eth[1].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 43 TestScenario.switchB.eth[1].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 44 TestScenario.switchB.eth[1].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 45 TestScenario.switchB.eth[1].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 46 TestScenario.switchB.eth[1].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 47 TestScenario.switchB.eth[1].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 48 TestScenario.switchB.eth[2].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 49 TestScenario.switchB.eth[2].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 50 TestScenario.switchB.eth[2].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 51 TestScenario.switchB.eth[2].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 52 TestScenario.switchB.eth[2].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 53 TestScenario.switchB.eth[2].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 54 TestScenario.switchB.eth[2].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 55 TestScenario.switchB.eth[2].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 56 TestScenario.workstation1.trafGenQueueApp sentPk:vector(packetBytes) ETV
attr interpolationmode none
attr source sentPk
attr title "packets sent, vector(packetBytes)"
vector 57 TestScenario.workstation2.trafGenQueueApp sentPk:vector(packetBytes) ETV
attr interpolationmode none
attr source sentPk
attr title "packets sent, vector(packetBytes)"
vector 58 TestScenario.workstation1.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 59 TestScenario.workstation2.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 60 TestScenario.workstation1.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 61 TestScenario.workstation2.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 62 TestScenario.workstation1.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 63 TestScenario.workstation2.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 64 TestScenario.robotController.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 65 TestScenario.robotController.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 66 TestScenario.robotController.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 67 TestScenario.workstation1.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 68 TestScenario.workstation2.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 69 TestScenario.switchA.eth[1].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 70 TestScenario.switchA.eth[1].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 71 TestScenario.switchA.eth[2].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 72 TestScenario.switchA.eth[2].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 73 TestScenario.switchA.eth[1].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 74 TestScenario.switchA.eth[2].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 75 TestScenario.switchA.eth[1].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 76 TestScenario.switchA.eth[2].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 77 TestScenario.switchA.processingDelay[1] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 78 TestScenario.switchA.processingDelay[1] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 79 TestScenario.switchA.processingDelay[2] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 80 TestScenario.switchA.processingDelay[2] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 81 TestScenario.robotController.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 82 TestScenario.switchA.eth[0].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 83 TestScenario.switchA.eth[0].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 84 TestScenario.switchA.eth[0].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 85 TestScenario.switchA.eth[0].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 86 TestScenario.switchA.processingDelay[0] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 87 TestScenario.switchA.processingDelay[0] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 88 TestScenario.switchA.processingDelay[1] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 89 TestScenario.switchA.processingDelay[2] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 90 TestScenario.switchA.eth[3].queuing.queues[6] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 91 TestScenario.switchA.eth[3].queuing.queues[5] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 92 TestScenario.switchA.eth[3].queuing.queues[6] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 93 TestScenario.switchA.eth[3].vlanEncapP encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 94 TestScenario.switchA.eth[3].etherEncapP encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 95 TestScenario.switchA.eth[3].mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 96 TestScenario.switchA.processingDelay[0] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 97 TestScenario.switchA.eth[3].queuing.queues[7] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 98 TestScenario.switchA.eth[3].queuing.queues[7] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 99 TestScenario.switchA.eth[3].vlanEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 100 TestScenario.switchA.eth[3].etherEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 101 TestScenario.switchA.eth[3].mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 102 TestScenario.switchB.eth[2].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 103 TestScenario.switchB.eth[2].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 104 TestScenario.switchB.eth[2].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 105 TestScenario.switchB.eth[2].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 106 TestScenario.switchB.processingDelay[2] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 107 TestScenario.switchB.processingDelay[2] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 108 TestScenario.switchB.processingDelay[2] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 109 TestScenario.switchB.eth[0].queuing.queues[7] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 110 TestScenario.switchB.eth[0].queuing.queues[7] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 111 TestScenario.switchB.eth[0].vlanEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 112 TestScenario.switchB.eth[0].etherEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 113 TestScenario.switchB.eth[0].mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 114 TestScenario.switchB.eth[0].mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 115 TestScenario.roboticArm.eth.mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 116 TestScenario.roboticArm.eth.mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 117 TestScenario.roboticArm.eth.encap decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 118 TestScenario.roboticArm.vlanEncap decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 119 TestScenario.roboticArm.trafGenApp packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 120 TestScenario.roboticArm.trafGenApp endToEndDelay:vector ETV
attr interpolationmode none
attr source dataAge(packetReceived)
attr title "end-to-end delay, vector"
attr unit s
vector 121 TestScenario.switchB.eth[1].queuing.queues[6] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 122 TestScenario.switchB.eth[1].queuing.queues[6] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 123 TestScenario.switchB.eth[1].vlanEncapP encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 124 TestScenario.switchB.eth[1].etherEncapP encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 125 TestScenario.switchB.eth[1].mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
0	0	0	0
1	0	0	0
2	0	0	0
3	0	0	0
4	0	0	0
5	0	0	0
6	0	0	0
7	0	0	0
8	0	0	0
9	0	0	0
10	0	0	0
11	0	0	0
12	0	0	0
13	0	0	0
14	0	0	0
15	0	0	0
16	0	0	0
17	0	0	0
18	0	0	0
19	0	0	0
20	0	0	0
21	0	0	0
22	0	0	0
23	0	0	0
24	0	0	0
25	0	0	0
26	0	0	0
27	0	0	0
28	0	0	0
29	0	0	0
29	55	0.000017308	1
29	141	0.000029612	2
29	213	0.000041916	3
30	0	0	0
30	54	0.000017308	1
30	63	0.000017308	0
30	140	0.000029612	1
30	158	0.000032972	0
30	212	0.000041916	1
30	224	0.000045276	0
31	0	0	0
31	73	0.000018172	1
31	80	0.000018172	0
32	0	0	0
33	0	0	0
34	0	0	0
35	0	0	0
36	0	0	0
37	0	0	0
38	0	0	0
39	0	0	0
39	120	0.000026472	1
39	126	0.000026472	0
40	0	0	0
41	0	0	0
42	0	0	0
43	0	0	0
44	0	0	0
45	0	0	0
46	0	0	0
46	193	0.000037976	1
46	199	0.000037976	0
47	0	0	0
48	0	0	0
49	0	0	0
50	0	0	0
51	0	0	0
52	0	0	0
53	0	0	0
54	0	0	0
55	0	0	0
56	0	0	1496
56	23	0.000012304	1496
56	99	0.000024608	1496
56	172	0.000036912	1496
57	0	0	1496
57	24	0.000012304	1496
57	100	0.000024608	1496
57	173	0.000036912	1496
58	3	0	1500
58	25	0.000012304	1500
58	101	0.000024608	1500
58	174	0.000036912	1500
59	4	0	1500
59	26	0.000012304	1500
59	102	0.000024608	1500
59	175	0.000036912	1500
60	6	0	1500
60	27	0.000012304	1500
60	103	0.000024608	1500
60	176	0.000036912	1500
61	7	0	1500
61	28	0.000012304	1500
61	104	0.000024608	1500
61	177	0.000036912	1500
62	8	0	1518
62	29	0.000012304	1518
62	105	0.000024608	1518
62	178	0.000036912	1518
63	9	0	1518
63	30	0.000012304	1518
63	106	0.000024608	1518
63	179	0.000036912	1518
64	18	0.00001	358
65	19	0.00001	358
66	20	0.00001	376
67	21	0.000012208	1518
67	97	0.000024512	1518
67	170	0.000036816	1518
67	236	0.00004912	1518
68	22	0.000012208	1518
68	98	0.000024512	1518
68	171	0.000036816	1518
68	237	0.00004912	1518
69	31	0.000012308	1518
69	107	0.000024612	1518
69	180	0.000036916	1518
70	31	0.000012308	1518
70	107	0.000024612	1518
70	180	0.000036916	1518
71	32	0.000012308	1518
71	108	0.000024612	1518
71	181	0.000036916	1518
72	32	0.000012308	1518
72	108	0.000024612	1518
72	181	0.000036916	1518
73	33	0.000012308	1500
73	109	0.000024612	1500
73	182	0.000036916	1500
74	34	0.000012308	1500
74	110	0.000024612	1500
74	183	0.000036916	1500
75	35	0.000012308	1496
75	111	0.000024612	1496
75	184	0.000036916	1496
76	36	0.000012308	1496
76	112	0.000024612	1496
76	185	0.000036916	1496
77	39	0.000012308	1496
77	115	0.000024612	1496
77	188	0.000036916	1496
78	39	0.000012308	5e-06
78	115	0.000024612	5e-06
78	188	0.000036916	5e-06
79	40	0.000012308	1496
79	116	0.000024612	1496
79	189	0.000036916	1496
80	40	0.000012308	5e-06
80	116	0.000024612	5e-06
80	189	0.000036916	5e-06
81	41	0.000013072	376
82	43	0.000013172	376
83	43	0.000013172	376
84	44	0.000013172	358
85	45	0.000013172	354
86	47	0.000013172	354
87	47	0.000013172	5e-06
88	48	0.000017308	1496
88	134	0.000029612	1496
88	206	0.000041916	1496
89	49	0.000017308	1496
89	135	0.000029612	1496
89	207	0.000041916	1496
90	54	0.000017308	1496
90	140	0.000029612	1496
90	212	0.000041916	1496
91	55	0.000017308	1496
91	141	0.000029612	1496
91	213	0.000041916	1496
92	63	0.000017308	0
92	158	0.000032972	3.36e-06
92	224	0.000045276	3.36e-06
93	67	0.000017308	1500
93	162	0.000032972	1500
93	228	0.000045276	1500
94	68	0.000017308	1500
94	163	0.000032972	1500
94	229	0.000045276	1500
95	69	0.000017308	1518
95	86	0.000018172	376
95	164	0.000032972	1518
95	230	0.000045276	1518
96	70	0.000018172	354
97	73	0.000018172	354
98	80	0.000018172	0
99	84	0.000018172	358
100	85	0.000018172	358
101	87	0.000018204	1518
101	90	0.000021372	376
101	153	0.000032876	1518
101	219	0.00004518	1518
102	92	0.000021472	376
102	165	0.000032976	1518
102	231	0.00004528	1518
103	92	0.000021472	376
103	165	0.000032976	1518
103	231	0.00004528	1518
104	93	0.000021472	358
104	166	0.000032976	1500
104	232	0.00004528	1500
105	94	0.000021472	354
105	167	0.000032976	1496
105	233	0.00004528	1496
106	96	0.000021472	354
106	169	0.000032976	1496
106	235	0.00004528	1496
107	96	0.000021472	5e-06
107	169	0.000032976	5e-06
107	235	0.00004528	5e-06
108	117	0.000026472	354
108	190	0.000037976	1496
109	120	0.000026472	354
110	126	0.000026472	0
111	130	0.000026472	358
112	131	0.000026472	358
113	132	0.000026472	376
114	133	0.000029544	376
115	149	0.000029644	376
116	149	0.000029644	376
117	150	0.000029644	358
118	151	0.000029644	354
119	152	0.000029644	354
120	152	0.000029644	1.9644e-05
121	193	0.000037976	1496
122	199	0.000037976	0
123	203	0.000037976	1500
124	204	0.000037976	1500
125	205	0.000037976	1518

