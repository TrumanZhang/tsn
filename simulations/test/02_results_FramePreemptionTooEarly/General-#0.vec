version 2
run General-0-20190211-10:07:22-14914
attr configname General
attr datetime 20190211-10:07:22
attr experiment General
attr inifile 02_FramePreemptionTooEarly.ini
attr iterationvars ""
attr iterationvarsf ""
attr measurement ""
attr network TestNetwork
attr processid 14914
attr repetition 0
attr replication #0
attr resultdir 02_results_FramePreemptionTooEarly
attr runnumber 0
attr seedset 0
param **.displayAddresses true
param **.verbose true
param **.promiscuous true
param **.registerProtocol true
param **.*.clock.clockRate "\"1us\""
param **.robotController.eth.mac.address "\"00-00-00-00-00-01\""
param **.workstation1.eth.mac.address "\"00-00-00-00-00-02\""
param **.sink.eth.mac.address "\"00-00-00-00-00-03\""
param **.switch*.processingDelay[*].delay 5us
param **.filteringDatabase.database "xmldoc(\"02_results_FramePreemptionTooEarly/02_FramePreemptionTooEarly_Routing.xml\", \"/filteringDatabases/\")"
param **.filteringDatabase.cycle "xmldoc(\"02_results_FramePreemptionTooEarly/02_FramePreemptionTooEarly_Schedule.xml\", \"/schedule/\")"
param **.gateController.initialSchedule "xmldoc(\"02_results_FramePreemptionTooEarly/02_FramePreemptionTooEarly_Schedule.xml\")"
param **.gateController.enableHoldAndRelease false
param **.switch*.queuing[*].tsAlgorithms[0].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[1].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[2].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[3].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[4].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[5].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[6].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[7].typename "\"StrictPriority\""
param **.queues[0].expressQueue false
param **.queues[1].expressQueue false
param **.queues[2].expressQueue false
param **.queues[3].expressQueue false
param **.queues[4].expressQueue false
param **.queues[5].expressQueue false
param **.queues[6].expressQueue false
param **.queues[7].expressQueue true
param **.queues[*].bufferCapacity 363360b
param **.switchA.eth[2].mac.enablePreemptingFrames true
param **.robotController.tsn_app.initialSchedule "xmldoc(\"02_results_FramePreemptionTooEarly/02_FramePreemptionTooEarly_Schedule.xml\")"
param **.workstation1.trafGenQueue.destAddress "\"00-00-00-00-00-03\""
param **.workstation1.trafGenQueue.packetLength "1499Byte - 4Byte"
param **.workstation1.trafGenQueue.vlanTagEnabled true
param **.workstation1.trafGenQueue.pcp 6
param **.sink.app.numPacketsPerBurst 0
param **.sink.app.sendInterval 1ms
param **.sink.app.packetLength 100B

vector 0 TestNetwork.switchA.eth[0].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 1 TestNetwork.switchA.eth[0].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 2 TestNetwork.switchA.eth[0].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 3 TestNetwork.switchA.eth[0].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 4 TestNetwork.switchA.eth[0].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 5 TestNetwork.switchA.eth[0].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 6 TestNetwork.switchA.eth[0].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 7 TestNetwork.switchA.eth[0].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 8 TestNetwork.switchA.eth[1].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 9 TestNetwork.switchA.eth[1].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 10 TestNetwork.switchA.eth[1].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 11 TestNetwork.switchA.eth[1].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 12 TestNetwork.switchA.eth[1].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 13 TestNetwork.switchA.eth[1].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 14 TestNetwork.switchA.eth[1].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 15 TestNetwork.switchA.eth[1].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 16 TestNetwork.switchA.eth[2].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 17 TestNetwork.switchA.eth[2].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 18 TestNetwork.switchA.eth[2].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 19 TestNetwork.switchA.eth[2].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 20 TestNetwork.switchA.eth[2].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 21 TestNetwork.switchA.eth[2].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 22 TestNetwork.switchA.eth[2].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 23 TestNetwork.switchA.eth[2].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 24 TestNetwork.sink.eth.queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 25 TestNetwork.sink.eth.queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 26 TestNetwork.sink.eth.queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 27 TestNetwork.sink.eth.queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 28 TestNetwork.sink.eth.queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 29 TestNetwork.sink.eth.queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 30 TestNetwork.sink.eth.queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 31 TestNetwork.sink.eth.queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 32 TestNetwork.workstation1.trafGenQueue sentPk:vector(packetBytes) ETV
attr interpolationmode none
attr source sentPk
attr title "packets sent, vector(packetBytes)"
vector 33 TestNetwork.workstation1.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 34 TestNetwork.workstation1.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 35 TestNetwork.robotController.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 36 TestNetwork.workstation1.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 37 TestNetwork.robotController.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 38 TestNetwork.robotController.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 39 TestNetwork.workstation1.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 40 TestNetwork.robotController.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 41 TestNetwork.switchA.eth[1].mac receivedExpressFrame:vector(packetBytes) ETV
attr interpolationmode none
attr title "receivedExpressFrame, vector(packetBytes)"
vector 42 TestNetwork.switchA.eth[1].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 43 TestNetwork.switchA.eth[1].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 44 TestNetwork.switchA.eth[1].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 45 TestNetwork.switchA.eth[1].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 46 TestNetwork.switchA.processingDelay[1] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 47 TestNetwork.switchA.processingDelay[1] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 48 TestNetwork.switchA.eth[0].mac receivedExpressFrame:vector(packetBytes) ETV
attr interpolationmode none
attr title "receivedExpressFrame, vector(packetBytes)"
vector 49 TestNetwork.switchA.eth[0].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 50 TestNetwork.switchA.eth[0].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 51 TestNetwork.switchA.eth[0].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 52 TestNetwork.switchA.eth[0].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 53 TestNetwork.switchA.processingDelay[0] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 54 TestNetwork.switchA.processingDelay[0] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 55 TestNetwork.switchA.processingDelay[1] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 56 TestNetwork.switchA.eth[2].queuing.queues[6] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 57 TestNetwork.switchA.eth[2].queuing.queues[6] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 58 TestNetwork.switchA.eth[2].vlanEncapP encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 59 TestNetwork.switchA.eth[2].etherEncapP encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 60 TestNetwork.switchA.eth[2].mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 61 TestNetwork.switchA.eth[2].mac pMacDelay:vector ETV
attr interpolationmode none
attr title "pMacDelay, vector"
vector 62 TestNetwork.switchA.processingDelay[0] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 63 TestNetwork.switchA.eth[2].queuing.queues[7] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 64 TestNetwork.switchA.eth[2].queuing.queues[7] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 65 TestNetwork.switchA.eth[2].vlanEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 66 TestNetwork.switchA.eth[2].etherEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 67 TestNetwork.switchA.eth[2].mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 68 TestNetwork.switchA.eth[2].mac eMacDelay:vector ETV
attr interpolationmode none
attr title "eMacDelay, vector"
vector 69 TestNetwork.sink.eth.mac receivedExpressFrame:vector(packetBytes) ETV
attr interpolationmode none
attr title "receivedExpressFrame, vector(packetBytes)"
vector 70 TestNetwork.sink.eth.mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 71 TestNetwork.sink.eth.mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 72 TestNetwork.sink.eth.etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 73 TestNetwork.sink.eth.vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 74 TestNetwork.sink.app packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 75 TestNetwork.sink.app endToEndDelay:vector ETV
attr interpolationmode none
attr source dataAge(packetReceived)
attr title "end-to-end delay, vector"
attr unit s
vector 76 TestNetwork.sink.eth.mac receivedPreemptableFrameFull:vector(packetBytes) ETV
attr interpolationmode none
attr title "receivedPreemptableFrameFull, vector(packetBytes)"
0	0	0	0
1	0	0	0
2	0	0	0
3	0	0	0
4	0	0	0
5	0	0	0
6	0	0	0
7	0	0	0
8	0	0	0
9	0	0	0
10	0	0	0
11	0	0	0
12	0	0	0
13	0	0	0
14	0	0	0
15	0	0	0
16	0	0	0
17	0	0	0
18	0	0	0
19	0	0	0
20	0	0	0
21	0	0	0
22	0	0	0
22	34	0.0001271	1
22	40	0.0001271	0
22	81	0.00025006	1
22	105	0.00037302	2
22	119	0.00037438	1
23	0	0	0
23	50	0.00012718	1
23	58	0.0001319	0
24	0	0	0
25	0	0	0
26	0	0	0
27	0	0	0
28	0	0	0
29	0	0	0
30	0	0	0
31	0	0	0
32	0	0	1495
32	26	0.00012296	1495
32	74	0.00024592	1495
32	98	0.00036888	1495
33	2	0	1499
33	27	0.00012296	1499
33	75	0.00024592	1499
33	99	0.00036888	1499
34	5	0	1499
34	28	0.00012296	1499
34	76	0.00024592	1499
34	100	0.00036888	1499
35	6	0	1500
35	130	0.0004	1500
36	7	0	1517
36	29	0.00012296	1517
36	77	0.00024592	1517
36	101	0.00036888	1517
37	8	0	1500
37	131	0.0004	1500
38	9	0	1518
38	132	0.0004	1518
39	14	0.000122	1517
39	68	0.00024496	1517
39	92	0.00036792	1517
40	15	0.00012208	1518
41	16	0.0001221	1525
41	69	0.00024506	1525
41	93	0.00036802	1525
42	16	0.0001221	1517
42	69	0.00024506	1517
42	93	0.00036802	1517
43	16	0.0001221	1517
43	69	0.00024506	1517
43	93	0.00036802	1517
44	17	0.0001221	1499
44	70	0.00024506	1499
44	94	0.00036802	1499
45	18	0.0001221	1495
45	71	0.00024506	1495
45	95	0.00036802	1495
46	20	0.0001221	1495
46	73	0.00024506	1495
46	97	0.00036802	1495
47	20	0.0001221	5e-06
47	73	0.00024506	5e-06
47	97	0.00036802	5e-06
48	21	0.00012218	1526
49	21	0.00012218	1518
50	21	0.00012218	1518
51	22	0.00012218	1500
52	23	0.00012218	1496
53	25	0.00012218	1496
54	25	0.00012218	5e-06
55	31	0.0001271	1495
55	78	0.00025006	1495
55	102	0.00037302	1495
56	34	0.0001271	1495
56	81	0.00025006	1495
56	105	0.00037302	1495
57	40	0.0001271	0
57	119	0.00037438	0.00012432
58	44	0.0001271	1499
58	123	0.00037438	1499
59	45	0.0001271	1499
59	124	0.00037438	1499
60	46	0.0001271	1517
60	64	0.0001319	1518
60	125	0.00037438	1517
61	46	0.0001271	0
61	91	0.00025622	0.00012912
61	125	0.00037438	0
62	47	0.00012718	1496
63	50	0.00012718	1496
64	58	0.0001319	4.72e-06
65	62	0.0001319	1500
66	63	0.0001319	1500
67	65	0.00013222	1517
67	85	0.00025526	1518
67	109	0.00037342	1517
68	67	0.00013318	1.28e-06
69	86	0.00025536	1526
70	86	0.00025536	1518
70	110	0.00037352	1517
71	86	0.00025536	1518
71	110	0.00037352	1517
72	87	0.00025536	1500
72	111	0.00037352	1499
73	88	0.00025536	1496
73	112	0.00037352	1495
74	90	0.00025536	1496
74	114	0.00037352	1495
75	90	0.00025536	0.00025536
75	114	0.00037352	0.00037352
76	110	0.00037352	1525

