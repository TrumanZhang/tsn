version 2
run General-0-20190211-11:25:27-4950
attr configname General
attr datetime 20190211-11:25:27
attr experiment General
attr inifile 03_FramePreemptionTooLate.ini
attr iterationvars ""
attr iterationvarsf ""
attr measurement ""
attr network TestNetwork
attr processid 4950
attr repetition 0
attr replication #0
attr resultdir 03_results_FramePreemptionTooLate
attr runnumber 0
attr seedset 0
param **.displayAddresses true
param **.verbose true
param **.promiscuous true
param **.registerProtocol true
param **.*.clock.clockRate "\"1us\""
param **.robotController.eth.mac.address "\"00-00-00-00-00-01\""
param **.workstation1.eth.mac.address "\"00-00-00-00-00-02\""
param **.sink.eth.mac.address "\"00-00-00-00-00-03\""
param **.switch*.processingDelay[*].delay 5us
param **.filteringDatabase.database "xmldoc(\"03_results_FramePreemptionTooLate/03_FramePreemptionTooLate_Routing.xml\", \"/filteringDatabases/\")"
param **.filteringDatabase.cycle "xmldoc(\"03_results_FramePreemptionTooLate/03_FramePreemptionTooLate_Schedule.xml\", \"/schedule/\")"
param **.gateController.initialSchedule "xmldoc(\"03_results_FramePreemptionTooLate/03_FramePreemptionTooLate_Schedule.xml\")"
param **.gateController.enableHoldAndRelease false
param **.switch*.queuing[*].tsAlgorithms[0].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[1].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[2].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[3].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[4].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[5].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[6].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[7].typename "\"StrictPriority\""
param **.queues[0].expressQueue false
param **.queues[1].expressQueue false
param **.queues[2].expressQueue false
param **.queues[3].expressQueue false
param **.queues[4].expressQueue false
param **.queues[5].expressQueue false
param **.queues[6].expressQueue false
param **.queues[7].expressQueue true
param **.queues[*].bufferCapacity 363360b
param **.switchA.eth[2].mac.enablePreemptingFrames true
param **.robotController.tsn_app.initialSchedule "xmldoc(\"03_results_FramePreemptionTooLate/03_FramePreemptionTooLate_Schedule.xml\")"
param **.workstation1.trafGenQueue.destAddress "\"00-00-00-00-00-03\""
param **.workstation1.trafGenQueue.packetLength "600Byte - 4Byte"
param **.workstation1.trafGenQueue.vlanTagEnabled true
param **.workstation1.trafGenQueue.pcp 6
param **.sink.app.numPacketsPerBurst 0
param **.sink.app.sendInterval 1ms
param **.sink.app.packetLength 100B

vector 0 TestNetwork.switchA.eth[0].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 1 TestNetwork.switchA.eth[0].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 2 TestNetwork.switchA.eth[0].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 3 TestNetwork.switchA.eth[0].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 4 TestNetwork.switchA.eth[0].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 5 TestNetwork.switchA.eth[0].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 6 TestNetwork.switchA.eth[0].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 7 TestNetwork.switchA.eth[0].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 8 TestNetwork.switchA.eth[1].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 9 TestNetwork.switchA.eth[1].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 10 TestNetwork.switchA.eth[1].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 11 TestNetwork.switchA.eth[1].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 12 TestNetwork.switchA.eth[1].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 13 TestNetwork.switchA.eth[1].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 14 TestNetwork.switchA.eth[1].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 15 TestNetwork.switchA.eth[1].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 16 TestNetwork.switchA.eth[2].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 17 TestNetwork.switchA.eth[2].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 18 TestNetwork.switchA.eth[2].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 19 TestNetwork.switchA.eth[2].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 20 TestNetwork.switchA.eth[2].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 21 TestNetwork.switchA.eth[2].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 22 TestNetwork.switchA.eth[2].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 23 TestNetwork.switchA.eth[2].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 24 TestNetwork.sink.eth.queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 25 TestNetwork.sink.eth.queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 26 TestNetwork.sink.eth.queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 27 TestNetwork.sink.eth.queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 28 TestNetwork.sink.eth.queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 29 TestNetwork.sink.eth.queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 30 TestNetwork.sink.eth.queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 31 TestNetwork.sink.eth.queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 32 TestNetwork.workstation1.trafGenQueue sentPk:vector(packetBytes) ETV
attr interpolationmode none
attr source sentPk
attr title "packets sent, vector(packetBytes)"
vector 33 TestNetwork.workstation1.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 34 TestNetwork.workstation1.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 35 TestNetwork.robotController.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 36 TestNetwork.workstation1.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 37 TestNetwork.robotController.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 38 TestNetwork.robotController.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 39 TestNetwork.workstation1.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 40 TestNetwork.switchA.eth[1].mac receivedExpressFrame:vector(packetBytes) ETV
attr interpolationmode none
attr title "receivedExpressFrame, vector(packetBytes)"
vector 41 TestNetwork.switchA.eth[1].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 42 TestNetwork.switchA.eth[1].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 43 TestNetwork.switchA.eth[1].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 44 TestNetwork.switchA.eth[1].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 45 TestNetwork.switchA.processingDelay[1] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 46 TestNetwork.switchA.processingDelay[1] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 47 TestNetwork.switchA.processingDelay[1] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 48 TestNetwork.switchA.eth[2].queuing.queues[6] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 49 TestNetwork.switchA.eth[2].queuing.queues[6] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 50 TestNetwork.switchA.eth[2].vlanEncapP encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 51 TestNetwork.switchA.eth[2].etherEncapP encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 52 TestNetwork.switchA.eth[2].mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 53 TestNetwork.switchA.eth[2].mac pMacDelay:vector ETV
attr interpolationmode none
attr title "pMacDelay, vector"
vector 54 TestNetwork.robotController.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 55 TestNetwork.switchA.eth[0].mac receivedExpressFrame:vector(packetBytes) ETV
attr interpolationmode none
attr title "receivedExpressFrame, vector(packetBytes)"
vector 56 TestNetwork.switchA.eth[0].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 57 TestNetwork.switchA.eth[0].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 58 TestNetwork.switchA.eth[0].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 59 TestNetwork.switchA.eth[0].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 60 TestNetwork.switchA.processingDelay[0] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 61 TestNetwork.switchA.processingDelay[0] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 62 TestNetwork.switchA.processingDelay[0] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 63 TestNetwork.switchA.eth[2].queuing.queues[7] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 64 TestNetwork.switchA.eth[2].mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 65 TestNetwork.sink.eth.mac receivedPreemptableFrameFull:vector(packetBytes) ETV
attr interpolationmode none
attr title "receivedPreemptableFrameFull, vector(packetBytes)"
vector 66 TestNetwork.sink.eth.mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 67 TestNetwork.sink.eth.mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 68 TestNetwork.sink.eth.etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 69 TestNetwork.sink.eth.vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 70 TestNetwork.sink.app packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 71 TestNetwork.sink.app endToEndDelay:vector ETV
attr interpolationmode none
attr source dataAge(packetReceived)
attr title "end-to-end delay, vector"
attr unit s
vector 72 TestNetwork.switchA.eth[2].queuing.queues[7] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 73 TestNetwork.switchA.eth[2].vlanEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 74 TestNetwork.switchA.eth[2].etherEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 75 TestNetwork.switchA.eth[2].mac eMacDelay:vector ETV
attr interpolationmode none
attr title "eMacDelay, vector"
vector 76 TestNetwork.sink.eth.mac receivedExpressFrame:vector(packetBytes) ETV
attr interpolationmode none
attr title "receivedExpressFrame, vector(packetBytes)"
0	0	0	0
1	0	0	0
2	0	0	0
3	0	0	0
4	0	0	0
5	0	0	0
6	0	0	0
7	0	0	0
8	0	0	0
9	0	0	0
10	0	0	0
11	0	0	0
12	0	0	0
13	0	0	0
14	0	0	0
15	0	0	0
16	0	0	0
17	0	0	0
18	0	0	0
19	0	0	0
20	0	0	0
21	0	0	0
22	0	0	0
22	27	0.00005518	1
22	33	0.00005518	0
22	74	0.00010622	1
22	101	0.00015726	2
22	121	0.00020334	1
22	135	0.0002083	2
23	0	0	0
23	56	0.00010126	1
23	80	0.00010622	0
24	0	0	0
25	0	0	0
26	0	0	0
27	0	0	0
28	0	0	0
29	0	0	0
30	0	0	0
31	0	0	0
32	0	0	596
32	20	0.00005104	596
32	60	0.00010208	596
32	94	0.00015312	596
32	128	0.00020416	596
33	2	0	600
33	21	0.00005104	600
33	61	0.00010208	600
33	95	0.00015312	600
33	129	0.00020416	600
34	5	0	600
34	22	0.00005104	600
34	62	0.00010208	600
34	96	0.00015312	600
34	130	0.00020416	600
35	6	0	1176
36	7	0	618
36	23	0.00005104	618
36	63	0.00010208	618
36	97	0.00015312	618
36	131	0.00020416	618
37	8	0	1176
38	9	0	1194
39	14	0.00005008	618
39	47	0.00010112	618
39	88	0.00015216	618
39	111	0.0002032	618
40	15	0.00005018	626
40	48	0.00010122	626
40	89	0.00015226	626
40	112	0.0002033	626
41	15	0.00005018	618
41	48	0.00010122	618
41	89	0.00015226	618
41	112	0.0002033	618
42	15	0.00005018	618
42	48	0.00010122	618
42	89	0.00015226	618
42	112	0.0002033	618
43	16	0.00005018	600
43	49	0.00010122	600
43	90	0.00015226	600
43	113	0.0002033	600
44	17	0.00005018	596
44	50	0.00010122	596
44	91	0.00015226	596
44	114	0.0002033	596
45	19	0.00005018	596
45	52	0.00010122	596
45	93	0.00015226	596
45	116	0.0002033	596
46	19	0.00005018	5e-06
46	52	0.00010122	5e-06
46	93	0.00015226	5e-06
46	116	0.0002033	5e-06
47	24	0.00005518	596
47	70	0.00010622	596
47	98	0.00015726	596
47	132	0.0002083	596
48	27	0.00005518	596
48	74	0.00010622	596
48	101	0.00015726	596
48	135	0.0002083	596
49	33	0.00005518	0
49	121	0.00020334	9.712e-05
50	37	0.00005518	600
50	125	0.00020334	600
51	38	0.00005518	600
51	126	0.00020334	600
52	39	0.00005518	618
52	86	0.00010622	1194
52	127	0.00020334	618
53	39	0.00005518	0
53	127	0.00020334	0
54	40	0.00009616	1194
55	41	0.00009626	1202
56	41	0.00009626	1194
57	41	0.00009626	1194
58	42	0.00009626	1176
59	43	0.00009626	1172
60	45	0.00009626	1172
61	45	0.00009626	5e-06
62	53	0.00010126	1172
63	56	0.00010126	1172
64	64	0.00010526	618
64	105	0.00020238	1194
65	65	0.00010536	626
66	65	0.00010536	618
66	106	0.00020248	1194
67	65	0.00010536	618
67	106	0.00020248	1194
68	66	0.00010536	600
68	107	0.00020248	1176
69	67	0.00010536	596
69	108	0.00020248	1172
70	69	0.00010536	596
70	110	0.00020248	1172
71	69	0.00010536	0.00010536
71	110	0.00020248	0.00020248
72	80	0.00010622	4.96e-06
73	84	0.00010622	1176
74	85	0.00010622	1176
75	86	0.00010622	0
76	106	0.00020248	1202

