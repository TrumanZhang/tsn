version 2
run General-0-20190118-15:17:08-16804
attr configname General
attr datetime 20190118-15:17:08
attr experiment General
attr inifile example_gating.ini
attr iterationvars ""
attr iterationvarsf ""
attr measurement ""
attr network TestScenario
attr processid 16804
attr repetition 0
attr replication #0
attr resultdir results_gating
attr runnumber 0
attr seedset 0
param **.displayAddresses true
param **.verbose true
param **.promiscuous true
param **.registerProtocol true
param **.*.clock.clockRate "\"1us\""
param **.robotController.eth.mac.address "\"00-00-00-00-00-01\""
param **.workstation1.eth.mac.address "\"00-00-00-00-00-02\""
param **.workstation2.eth.mac.address "\"00-00-00-00-00-03\""
param **.roboticArm.eth.mac.address "\"00-00-00-00-00-04\""
param **.backupServer.eth.mac.address "\"00-00-00-00-00-05\""
param **.switch*.processingDelay[*].delay 5us
param **.filteringDatabase.database "xmldoc(\"xml/TestScenarioRouting1.xml\", \"/filteringDatabases/\")"
param **.filteringDatabase.cycle "xmldoc(\"xml/TestScenarioSchedule1.xml\", \"/schedule/\")"
param **.gateController.initialSchedule "xmldoc(\"xml/TestScenarioSchedule_GatingOn.xml\")"
param **.switch*.queuing[*].tsAlgorithms[0].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[1].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[2].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[3].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[4].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[5].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[6].typename "\"StrictPriority\""
param **.switch*.queuing[*].tsAlgorithms[7].typename "\"StrictPriority\""
param **.queues[*].bufferCapacity 363360b
param **.switchA.eth[3].mac.enablePreemptingFrames false
param **.robotController.tsn_app.initialSchedule "xmldoc(\"xml/TestScenarioSchedule_GatingOn.xml\")"
param **.workstation*.trafGenQueue.destAddress "\"00-00-00-00-00-05\""
param **.workstation*.trafGenQueue.packetLength "1500Byte - 4Byte"
param **.workstation*.trafGenQueue.vlanTagEnabled true
param **.workstation1.trafGenQueue.pcp 6
param **.workstation2.trafGenQueue.pcp 5
param **.roboticArm.app.numPacketsPerBurst 0
param **.roboticArm.app.sendInterval 1ms
param **.roboticArm.app.packetLength 100B
param **.backupServer.app.numPacketsPerBurst 0
param **.backupServer.app.sendInterval 1ms
param **.backupServer.app.packetLength 100B

vector 0 TestScenario.switchA.eth[0].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 1 TestScenario.switchA.eth[0].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 2 TestScenario.switchA.eth[0].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 3 TestScenario.switchA.eth[0].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 4 TestScenario.switchA.eth[0].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 5 TestScenario.switchA.eth[0].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 6 TestScenario.switchA.eth[0].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 7 TestScenario.switchA.eth[0].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 8 TestScenario.switchA.eth[1].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 9 TestScenario.switchA.eth[1].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 10 TestScenario.switchA.eth[1].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 11 TestScenario.switchA.eth[1].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 12 TestScenario.switchA.eth[1].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 13 TestScenario.switchA.eth[1].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 14 TestScenario.switchA.eth[1].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 15 TestScenario.switchA.eth[1].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 16 TestScenario.switchA.eth[2].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 17 TestScenario.switchA.eth[2].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 18 TestScenario.switchA.eth[2].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 19 TestScenario.switchA.eth[2].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 20 TestScenario.switchA.eth[2].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 21 TestScenario.switchA.eth[2].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 22 TestScenario.switchA.eth[2].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 23 TestScenario.switchA.eth[2].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 24 TestScenario.switchA.eth[3].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 25 TestScenario.switchA.eth[3].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 26 TestScenario.switchA.eth[3].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 27 TestScenario.switchA.eth[3].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 28 TestScenario.switchA.eth[3].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 29 TestScenario.switchA.eth[3].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 30 TestScenario.switchA.eth[3].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 31 TestScenario.switchA.eth[3].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 32 TestScenario.switchB.eth[0].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 33 TestScenario.switchB.eth[0].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 34 TestScenario.switchB.eth[0].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 35 TestScenario.switchB.eth[0].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 36 TestScenario.switchB.eth[0].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 37 TestScenario.switchB.eth[0].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 38 TestScenario.switchB.eth[0].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 39 TestScenario.switchB.eth[0].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 40 TestScenario.switchB.eth[1].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 41 TestScenario.switchB.eth[1].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 42 TestScenario.switchB.eth[1].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 43 TestScenario.switchB.eth[1].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 44 TestScenario.switchB.eth[1].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 45 TestScenario.switchB.eth[1].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 46 TestScenario.switchB.eth[1].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 47 TestScenario.switchB.eth[1].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 48 TestScenario.switchB.eth[2].queuing.queues[0] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 49 TestScenario.switchB.eth[2].queuing.queues[1] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 50 TestScenario.switchB.eth[2].queuing.queues[2] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 51 TestScenario.switchB.eth[2].queuing.queues[3] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 52 TestScenario.switchB.eth[2].queuing.queues[4] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 53 TestScenario.switchB.eth[2].queuing.queues[5] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 54 TestScenario.switchB.eth[2].queuing.queues[6] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 55 TestScenario.switchB.eth[2].queuing.queues[7] queueLength:vector ETV
attr interpolationmode sample-hold
attr title "queue length, vector"
vector 56 TestScenario.workstation1.trafGenQueue sentPk:vector(packetBytes) ETV
attr interpolationmode none
attr source sentPk
attr title "packets sent, vector(packetBytes)"
vector 57 TestScenario.workstation2.trafGenQueue sentPk:vector(packetBytes) ETV
attr interpolationmode none
attr source sentPk
attr title "packets sent, vector(packetBytes)"
vector 58 TestScenario.workstation1.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 59 TestScenario.workstation2.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 60 TestScenario.workstation1.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 61 TestScenario.workstation2.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 62 TestScenario.workstation1.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 63 TestScenario.workstation2.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 64 TestScenario.robotController.vlanEncap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 65 TestScenario.robotController.eth.encap encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 66 TestScenario.robotController.eth.mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 67 TestScenario.workstation1.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 68 TestScenario.workstation2.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 69 TestScenario.switchA.eth[1].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 70 TestScenario.switchA.eth[1].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 71 TestScenario.switchA.eth[2].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 72 TestScenario.switchA.eth[2].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 73 TestScenario.switchA.eth[1].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 74 TestScenario.switchA.eth[2].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 75 TestScenario.switchA.eth[1].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 76 TestScenario.switchA.eth[2].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 77 TestScenario.switchA.processingDelay[1] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 78 TestScenario.switchA.processingDelay[1] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 79 TestScenario.switchA.processingDelay[2] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 80 TestScenario.switchA.processingDelay[2] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 81 TestScenario.robotController.eth.mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 82 TestScenario.switchA.eth[0].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 83 TestScenario.switchA.eth[0].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 84 TestScenario.switchA.eth[0].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 85 TestScenario.switchA.eth[0].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 86 TestScenario.switchA.processingDelay[0] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 87 TestScenario.switchA.processingDelay[0] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 88 TestScenario.switchA.processingDelay[1] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 89 TestScenario.switchA.processingDelay[2] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 90 TestScenario.switchA.eth[3].queuing.queues[6] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 91 TestScenario.switchA.eth[3].queuing.queues[5] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 92 TestScenario.switchA.eth[3].queuing.queues[6] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 93 TestScenario.switchA.eth[3].vlanEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 94 TestScenario.switchA.eth[3].etherEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 95 TestScenario.switchA.eth[3].mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 96 TestScenario.switchA.processingDelay[0] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 97 TestScenario.switchA.eth[3].queuing.queues[7] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 98 TestScenario.switchA.eth[3].mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 99 TestScenario.switchA.eth[3].queuing.queues[7] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 100 TestScenario.switchB.eth[2].mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 101 TestScenario.switchB.eth[2].mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 102 TestScenario.switchB.eth[2].etherEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 103 TestScenario.switchB.eth[2].vlanEncapE decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 104 TestScenario.switchB.processingDelay[2] packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 105 TestScenario.switchB.processingDelay[2] delay:vector ETV
attr interpolationmode none
attr source delay
attr title "packet delay, vector"
vector 106 TestScenario.switchB.processingDelay[2] packetSent:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSent
attr title "packets sent, vector(packetBytes)"
vector 107 TestScenario.switchB.eth[1].queuing.queues[6] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 108 TestScenario.switchB.eth[0].queuing.queues[7] rcvdPk:vector(packetBytes) ETV
attr interpolationmode none
attr title "received packets, vector(packetBytes)"
vector 109 TestScenario.switchB.eth[0].queuing.queues[7] queueingTime:vector ETV
attr interpolationmode none
attr title "queueing time, vector"
vector 110 TestScenario.switchB.eth[0].vlanEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 111 TestScenario.switchB.eth[0].etherEncapE encapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source encapPk
attr title "packets encapsulated, vector(packetBytes)"
vector 112 TestScenario.switchB.eth[0].mac packetReceivedFromUpper:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceivedFromUpper
attr title "packet bytes from higher layer, vector(packetBytes)"
vector 113 TestScenario.switchB.eth[0].mac txPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToLower
attr title "packets transmitted, vector(packetBytes)"
vector 114 TestScenario.roboticArm.eth.mac rxPkOk:vector(packetBytes) ETV
attr interpolationmode none
attr source rxPkOk
attr title "packets received OK, vector(packetBytes)"
vector 115 TestScenario.roboticArm.eth.mac passedUpPk:vector(packetBytes) ETV
attr interpolationmode none
attr source packetSentToUpper
attr title "packets passed to higher layer, vector(packetBytes)"
vector 116 TestScenario.roboticArm.eth.encap decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 117 TestScenario.roboticArm.vlanEncap decapPk:vector(packetBytes) ETV
attr interpolationmode none
attr source decapPk
attr title "packets decapsulated, vector(packetBytes)"
vector 118 TestScenario.roboticArm.app packetReceived:vector(packetBytes) ETV
attr interpolationmode none
attr source packetReceived
attr title "packets received, vector(packetBytes)"
vector 119 TestScenario.roboticArm.app endToEndDelay:vector ETV
attr interpolationmode none
attr source dataAge(packetReceived)
attr title "end-to-end delay, vector"
attr unit s
0	0	0	0
1	0	0	0
2	0	0	0
3	0	0	0
4	0	0	0
5	0	0	0
6	0	0	0
7	0	0	0
8	0	0	0
9	0	0	0
10	0	0	0
11	0	0	0
12	0	0	0
13	0	0	0
14	0	0	0
15	0	0	0
16	0	0	0
17	0	0	0
18	0	0	0
19	0	0	0
20	0	0	0
21	0	0	0
22	0	0	0
23	0	0	0
24	0	0	0
25	0	0	0
26	0	0	0
27	0	0	0
28	0	0	0
29	0	0	0
29	76	0.000017308	1
29	127	0.000029612	2
29	221	0.000041916	3
30	0	0	0
30	75	0.000017308	1
30	84	0.000017308	0
30	126	0.000029612	1
30	153	0.00003278	0
30	220	0.000041916	1
30	232	0.000045084	0
31	0	0	0
31	94	0.000018172	1
31	135	0.000029612	0
32	0	0	0
33	0	0	0
34	0	0	0
35	0	0	0
36	0	0	0
37	0	0	0
38	0	0	0
39	0	0	0
39	194	0.000037784	1
39	200	0.000037784	0
40	0	0	0
41	0	0	0
42	0	0	0
43	0	0	0
44	0	0	0
45	0	0	0
46	0	0	0
46	168	0.000034616	1
47	0	0	0
48	0	0	0
49	0	0	0
50	0	0	0
51	0	0	0
52	0	0	0
53	0	0	0
54	0	0	0
55	0	0	0
56	0	0	1496
56	44	0.000012304	1496
56	100	0.000024608	1496
56	173	0.000036912	1496
57	0	0	1496
57	45	0.000012304	1496
57	101	0.000024608	1496
57	174	0.000036912	1496
58	3	0	1500
58	46	0.000012304	1500
58	102	0.000024608	1500
58	175	0.000036912	1500
59	4	0	1500
59	47	0.000012304	1500
59	103	0.000024608	1500
59	176	0.000036912	1500
60	27	0	1500
60	48	0.000012304	1500
60	104	0.000024608	1500
60	177	0.000036912	1500
61	28	0	1500
61	49	0.000012304	1500
61	105	0.000024608	1500
61	178	0.000036912	1500
62	29	0	1518
62	50	0.000012304	1518
62	106	0.000024608	1518
62	179	0.000036912	1518
63	30	0	1518
63	51	0.000012304	1518
63	107	0.000024608	1518
63	180	0.000036912	1518
64	39	0.00001	358
65	40	0.00001	358
66	41	0.00001	376
67	42	0.000012208	1518
67	98	0.000024512	1518
67	171	0.000036816	1518
67	244	0.00004912	1518
68	43	0.000012208	1518
68	99	0.000024512	1518
68	172	0.000036816	1518
68	245	0.00004912	1518
69	52	0.000012308	1518
69	108	0.000024612	1518
69	181	0.000036916	1518
70	52	0.000012308	1518
70	108	0.000024612	1518
70	181	0.000036916	1518
71	53	0.000012308	1518
71	109	0.000024612	1518
71	182	0.000036916	1518
72	53	0.000012308	1518
72	109	0.000024612	1518
72	182	0.000036916	1518
73	54	0.000012308	1500
73	110	0.000024612	1500
73	183	0.000036916	1500
74	55	0.000012308	1500
74	111	0.000024612	1500
74	184	0.000036916	1500
75	56	0.000012308	1496
75	112	0.000024612	1496
75	185	0.000036916	1496
76	57	0.000012308	1496
76	113	0.000024612	1496
76	186	0.000036916	1496
77	60	0.000012308	1496
77	116	0.000024612	1496
77	189	0.000036916	1496
78	60	0.000012308	5e-06
78	116	0.000024612	5e-06
78	189	0.000036916	5e-06
79	61	0.000012308	1496
79	117	0.000024612	1496
79	190	0.000036916	1496
80	61	0.000012308	5e-06
80	117	0.000024612	5e-06
80	190	0.000036916	5e-06
81	62	0.000013072	376
82	64	0.000013172	376
83	64	0.000013172	376
84	65	0.000013172	358
85	66	0.000013172	354
86	68	0.000013172	354
87	68	0.000013172	5e-06
88	69	0.000017308	1496
88	119	0.000029612	1496
88	214	0.000041916	1496
89	70	0.000017308	1496
89	120	0.000029612	1496
89	215	0.000041916	1496
90	75	0.000017308	1496
90	126	0.000029612	1496
90	220	0.000041916	1496
91	76	0.000017308	1496
91	127	0.000029612	1496
91	221	0.000041916	1496
92	84	0.000017308	0
92	153	0.00003278	3.168e-06
92	232	0.000045084	3.168e-06
93	88	0.000017308	1500
93	139	0.000029612	358
93	157	0.00003278	1500
93	236	0.000045084	1500
94	89	0.000017308	1500
94	140	0.000029612	358
94	158	0.00003278	1500
94	237	0.000045084	1500
95	90	0.000017308	1518
95	141	0.000029612	376
95	159	0.00003278	1518
95	238	0.000045084	1518
96	91	0.000018172	354
97	94	0.000018172	354
98	118	0.000029516	1518
98	148	0.000032684	376
98	227	0.000044988	1518
99	135	0.000029612	1.144e-05
100	143	0.000029616	1518
100	160	0.000032784	376
100	239	0.000045088	1518
101	143	0.000029616	1518
101	160	0.000032784	376
101	239	0.000045088	1518
102	144	0.000029616	1500
102	161	0.000032784	358
102	240	0.000045088	1500
103	145	0.000029616	1496
103	162	0.000032784	354
103	241	0.000045088	1496
104	147	0.000029616	1496
104	164	0.000032784	354
104	243	0.000045088	1496
105	147	0.000029616	5e-06
105	164	0.000032784	5e-06
105	243	0.000045088	5e-06
106	165	0.000034616	1496
106	191	0.000037784	354
107	168	0.000034616	1496
108	194	0.000037784	354
109	200	0.000037784	0
110	204	0.000037784	358
111	205	0.000037784	358
112	206	0.000037784	376
113	207	0.000040856	376
114	210	0.000040956	376
115	210	0.000040956	376
116	211	0.000040956	358
117	212	0.000040956	354
118	213	0.000040956	354
119	213	0.000040956	3.0956e-05

