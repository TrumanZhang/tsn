%description:
Test for parsing GateSchedule and DatagramSchedule XML files.

%includes:
#include "nesting/common/schedule/ScheduleFactory.h"
using namespace nesting;
#include <memory>

%file: test.ned
simple Test
{
    @isNetwork(true);
    xml gateSchedule = xmldoc("gateSchedule.xml");
    xml datagramSchedule = xmldoc("datagramSchedule.xml");
}

%activity:
std::shared_ptr<Schedule<GateBitvector>> gateSchedule(
        nesting::ScheduleFactory::createGateBitvectorScheduleV2(par("gateSchedule")));
if (gateSchedule == nullptr) {
    throw cRuntimeError("gateSchedule must not be nullptr!");
}
if (gateSchedule->isEmpty()) {
    throw cRuntimeError("gateSchedule must not be empty!");
}

std::shared_ptr<Schedule<SendDatagramEvent>> datagramSchedule(
        nesting::ScheduleFactory::createDatagramSchedule(par("datagramSchedule")));
if (datagramSchedule == nullptr) {
    throw cRuntimeError("datagramSchedule must not be nullptr!");
}
if (datagramSchedule->isEmpty()) {
    throw cRuntimeError("datagramSchedule must not be empty!");
}

%file: gateSchedule.xml
<gateSchedule baseTime="3us" cycleTime="100us" cycleTimeExtension="50us">
    <entry gateStates="01111111" timeInterval="100us"/>
</gateSchedule>

%file: datagramSchedule.xml
<datagramSchedule baseTime="3us" cycleTime="100us" cycleTimeExtension="50us">
    <entry payloadSize="1024B" destAddress="198.162.0.42" destPort="10" pcp="1" de="true" vid="2" timeInterval="80us"/>
    <entry payloadSize="1kB" destAddress="198.162.0.42" destPort="10" timeInterval="20us"/>
</datagramSchedule>

%exitcode: 0
